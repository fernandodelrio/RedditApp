///
/// @Generated by Mockolo
///

import Combine
import Core
import Foundation

public class OfflinePostProviderMock: OfflinePostProvider {
    public init() { }
    public init(postPublisher: PassthroughSubject<[Post], Never>) {
        self._postPublisher = postPublisher
    }

    public private(set) var postPublisherSetCallCount = 0
    private var _postPublisher: PassthroughSubject<[Post], Never>!  { didSet { postPublisherSetCallCount += 1 } }
    public var postPublisher: PassthroughSubject<[Post], Never> {
        get { return _postPublisher }
        set { _postPublisher = newValue }
    }

    public private(set) var startCallCount = 0
    public var startHandler: (() -> ())?
    public func start()  {
        startCallCount += 1
        if let startHandler = startHandler {
            startHandler()
        }
    }

    public private(set) var createPostsCallCount = 0
    public var createPostsHandler: (([Post], Bool) -> (AnyPublisher<Void, Never>))?
    public func createPosts(posts: [Post], isRecent: Bool) -> AnyPublisher<Void, Never> {
        createPostsCallCount += 1
        if let createPostsHandler = createPostsHandler {
            return createPostsHandler(posts, isRecent)
        }
        fatalError("createPostsHandler returns can't have a default value thus its handler must be set")
    }

    public private(set) var updatePostsCallCount = 0
    public var updatePostsHandler: (([Post]) -> (AnyPublisher<Void, Never>))?
    public func updatePosts(posts: [Post]) -> AnyPublisher<Void, Never> {
        updatePostsCallCount += 1
        if let updatePostsHandler = updatePostsHandler {
            return updatePostsHandler(posts)
        }
        fatalError("updatePostsHandler returns can't have a default value thus its handler must be set")
    }
}

